---
name: runner-e2e-tests-playwright

on:
  workflow_dispatch:
    inputs:
      tests_branch:
        description: 'Target branch for pmm-ui-tests repository'
        type: string
        default: 'main'
        required: true
      test_flag:
        description: 'Flag to run only specific portion of the tests.'
        type: string
        required: false
      api_version:
        description: 'Version of the pmm server used for testing'
        type: string
        default: 'dev-latest'
        required: true

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      SHA: ${{ inputs.sha || 'null' }}
      PMM_BASE_URL: https://127.0.0.1
      ADMIN_PASSWORD: admin

      UI_TESTS_BRANCH: ${{ inputs.pmm_ui_tests_branch }}
      WIZARD_ARGS: ${{ inputs.setup_services }}
      PMM_TEST_FLAG: ${{ inputs.pmm_test_flag }}

      PMM_SERVER_VERSION: ${{ inputs.pmm_server_version }}
      PMM_CLIENT_VERSION: ${{ inputs.pmm_client_version }}
      PMM_QA_BRANCH: ${{ inputs.pmm_qa_branch }}

      OKTA_TOKEN: ${{ secrets.OKTA_TOKEN }}
      OAUTH_ISSUER_URL: 'https://id-dev.percona.com/oauth2/aus15pi5rjdtfrcH51d7'
      OAUTH_CLIENT_ID: ${{ secrets.OAUTH_CLIENT_ID }}
      OAUTH_CLIENT_SECRET: ${{ secrets.OAUTH_CLIENT_SECRET }}
      OAUTH_PMM_CLIENT_ID: ${{ secrets.OAUTH_PMM_CLIENT_ID }}
      OAUTH_PMM_CLIENT_SECRET: ${{ secrets.OAUTH_PMM_CLIENT_SECRET }}
      OAUTH_DEV_HOST: 'id-dev.percona.com'
      OAUTH_SCOPES: percona

      # Variables for E2E tests
      MAILOSAUR_API_KEY: ${{ secrets.MAILOSAUR_API_KEY }}
      MAILOSAUR_UI_TESTS_SERVER_ID: ${{ secrets.MAILOSAUR_UI_TESTS_SERVER_ID }}
      MAILOSAUR_API_TESTS_SERVER_ID: ${{ secrets.MAILOSAUR_API_TESTS_SERVER_ID }}

      SERVICENOW_LOGIN: percona_platform
      SERVICENOW_PASSWORD: ${{ secrets.SERVICENOW_PASSWORD }}
      SERVICENOW_DEV_URL: 'https://perconadev.service-now.com/api/x_pellc_percona_pl/platform/settest'

    steps:

      - name: 'Checkout API tests: "${{ inputs.tests_branch }}"'
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.tests_branch }}
          path: ./dotnet-nunit-api-automation

      - name: 'Install playwright'
        working-directory: ./dotnet-nunit-api-automation
        run: |
          echo "install playwright!!"

      - name: 'run tests'
        run: |
          echo "run nunit tests"
